#include <iostream>
#include <cstdlib>

using namespace std;

class Shape {
    protected:
        int width, height;

    public:
        Shape(int a = 0, int b = 0)
        {
            width = a;
            height = b;
        }
        
        virtual int area()
        {
            cout << "Parent class area : ";
            return 0;
        }
};

class Rectangle: public Shape {
    public:

        Rectangle(int a = 0, int b = 0):Shape(a , b) {}

        int area()
        {
            cout << "Rectangle Class area : ";
            return (width * height);
        }
};

class Triangle: public Shape {
    public:
        Triangle(int a = 0, int b = 0):Shape(a , b) { }

        int area()
        {
            cout << "Triangle Class area : ";
            return(width * height / 2);
        }
};

int main()
{
    Shape* shape;
    Rectangle rec(10,7);
    Triangle tri(10,5);
    shape = &rec; //Store the address of Rectangle
    cout << shape->area() << endl; //call rectangle area
    shape = &tri; //Store the address of Triangle
    cout << shape->area() << endl; //call Triangle area

    Shape base(10, 2);
    shape = &base;
    cout << shape->area() << endl; 
}
